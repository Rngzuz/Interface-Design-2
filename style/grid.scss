@import "variables.scss";

//Make specific sized flex columns
@mixin flexColumns($prefix, $name, $columns) {
    @for $index from 1 through $columns {
        $width: 100%/$columns*$index;

        .#{$prefix}-#{$name}-#{$index} {
            flex: 0 0 $width;
            max-width: $width;
        }
    }
}

//Make flex utilities e.g. centering children
@mixin flexUtils($name) {
    //Properties which is commented out is the default values
    $flexProperties: (
        direction: (
            flex-direction: (
                //row: "row",
                row-reverse: "row-reverse",
                col: "column",
                col-reverse: "column-reverse"
            )
        ),
        wrap: (
            flex-wrap: (
                nowrap: "nowrap",
                //wrap: "wrap", //This is not the default, but .row has flex-wrap: wrap
                reverse: "wrap-reverse"
            )
        ),
        justify: (
            justify-content: (
                //start: "flex-start",
                end: "flex-end",
                center: "center",
                between: "space-between",
                around: "space-around"
            )
        ),
        self: (
            align-self: (
                //auto: "auto",
                start: "flex-start",
                end: "flex-end",
                center: "center",
                baseline: "baseline",
                stretch: "stretch"
            )
        ),
        items: (
            align-items: (
                start: "flex-start",
                end: "flex-end",
                center: "center",
                baseline: "baseline",
                //stretch: "stretch"
            )
        ),
        content: (
            align-content: (
                start: "flex-start",
                end: "flex-end",
                center: "center",
                between: "space-between",
                around: "space-around",
                //stretch: "stretch"
            )
        )
    );

    @each $className, $propertyMap in $flexProperties {
        @each $propertyName, $propertyValues in $propertyMap {
            @each $key, $value in $propertyValues {
                .#{$className}-#{$key}-#{$name} {
                    #{$propertyName}: #{$value};
                }
            }
        }
    }
}

@mixin flexSpecialColumns($name) {
    .col-#{$name} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
    }

    .col-fit-#{$name} {
        flex-basis: 0;
        flex-grow: 0;
        flex-shrink: 1;
    }
}

@mixin gridSpace($name) {
    .space-#{$name} {
        padding-bottom: 2 * $gutter;
    }

    .x2-space-#{$name} {
        padding-bottom: 2 * (2 * $gutter);
    }

    .nospace-#{$name} {
        padding-bottom: 0;
    }
}

.container {
    padding: 0 (2 * $gutter);
    margin-right: auto;
    margin-left: auto;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 (-$gutter);
}

[class*="#{$prefix}-"] {
    padding: 0 $gutter;
}

//SMALL BREAKPOINT
@include flexUtils($small);
@include flexSpecialColumns($small);
@include flexColumns($prefix, $small, $columns);
@include gridSpace($small);

@media (max-width: 767px) {
    .hidden-#{$small} {
        display: none;
    }

    .shown-#{$medium} {
        display: none;
    }

    .shown-#{$large} {
        display: none;
    }
}

// MEDIUM BREAKPOINT
@media (min-width: 768px) {
    .container {
        width: 768px;
    }

    @include flexUtils($medium);
    @include flexSpecialColumns($medium);
    @include flexColumns($prefix, $medium, $columns);
    @include gridSpace($medium);
}

@media (min-width: 768px) and (max-width: 991px) {
    .hidden-#{$medium} {
        display: none;
    }

    .shown-#{$small} {
        display: none;
    }


    .shown-#{$large} {
        display: none;
    }
}

//LARGE BREAKPOINT
@media (min-width: 992px) {
    .hidden-#{$large} {
        display: none;
    }

    .shown-#{$small} {
        display: none;
    }

    .shown-#{$medium} {
        display: none;
    }

    .container {
        width: 992px;
    }

    @include flexUtils($large);
    @include flexSpecialColumns($large);
    @include flexColumns($prefix, $large, $columns);
    @include gridSpace($large);
}